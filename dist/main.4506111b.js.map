{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","main.js"],"names":["TicTacToe","document","querySelector","getElementById","querySelectorAll","addEventListener","_displayFiguresAccordingly","bind","body","classList","toggle","_controlAudioTag","_changePlayingMode","textContent","className","innerHTML","insertAdjacentHTML","_resetToDefault","e","_playAudioWhenPlacingFigures","includes","target","closest","dataset","id","forEach","x","add","number","push","idx","indexOf","splice","_checkForTheWinner","randomSquare","Math","floor","random","length","setTimeout","_fillRandomSquare","square","sound","pause","currentTime","play","console","log","computer","sequence","_isArrayInArray","_winOperations","player","winnerPlayerBoard","_makeWinningSequenceLighther","figure","style","opacity","remove","el","arr1","arr2","every","elem","iconEl","volume","value","ticTacToe"],"mappings":"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","file":"main.4506111b.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import 'regenerator-runtime';\r\n\r\nclass TicTacToe {\r\n  // bringing in DOM elements\r\n  #container = document.querySelector('.container');\r\n  #winnerHeading = document.querySelector('h2');\r\n  #lightBulbIcon = document.querySelector('.fa-lightbulb');\r\n  #scorePlayerOne = document.getElementById('score-player1');\r\n  #scorePlayerTwo = document.getElementById('score-player2');\r\n  #scoreComputer = document.getElementById('score-computer');\r\n  #figures = document.querySelectorAll('.square div');\r\n  #audioWhenPlacingFigure = document.querySelector('.placing-audio');\r\n  #audioWhenWinning = document.querySelector('.winning-audio');\r\n  #controlAudioTag = document.querySelector('.control-audio');\r\n  #playerCount = document.querySelector('.player-count');\r\n  #allSquares = document.querySelectorAll('.square');\r\n  #comuterOrPerson2 = document.querySelector('.comuter-or-person2');\r\n\r\n  //   all possible winning sequence\r\n  #winningSequences = [\r\n    [1, 2, 3],\r\n    [1, 4, 7],\r\n    [1, 5, 9],\r\n    [2, 5, 8],\r\n    [3, 5, 7],\r\n    [3, 6, 9],\r\n    [4, 5, 6],\r\n    [7, 8, 9],\r\n  ];\r\n\r\n  //   the one that will be winning sequence\r\n  #theWinningSequence = [];\r\n\r\n  #identifyIfResetNeeded = false;\r\n  #activePlayer = 0;\r\n  #xArray = [];\r\n  #oArray = [];\r\n  #squaresNotUsed = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  #multiPlayer = true;\r\n\r\n  constructor() {\r\n    // adding event listener to the container that inclides all the squares to display either X or 0\r\n    this.#container.addEventListener(\r\n      'click',\r\n      this._displayFiguresAccordingly.bind(this)\r\n    );\r\n\r\n    // toggling the ligth mode\r\n    this.#lightBulbIcon.addEventListener('click', () =>\r\n      document.body.classList.toggle('dark')\r\n    );\r\n\r\n    // adding volume turn ond turn off functionality\r\n    this.#controlAudioTag.addEventListener(\r\n      'click',\r\n      this._controlAudioTag.bind(this)\r\n    );\r\n\r\n    // check for the multiplayer UI\r\n    this.#playerCount.addEventListener(\r\n      'click',\r\n      this._changePlayingMode.bind(this)\r\n    );\r\n  }\r\n\r\n  _changePlayingMode() {\r\n    if (this.#multiPlayer) {\r\n      this.#multiPlayer = false;\r\n\r\n      this.#comuterOrPerson2.textContent = 'computer';\r\n      this.#scorePlayerTwo.className = 'display-none';\r\n      this.#scoreComputer.className = '';\r\n      const html = '<i class=\"far fa-user\"></i>';\r\n      this.#playerCount.innerHTML = '';\r\n      this.#playerCount.insertAdjacentHTML('beforeend', html);\r\n    } else {\r\n      this.#multiPlayer = true;\r\n\r\n      this.#comuterOrPerson2.textContent = 'two';\r\n      this.#scorePlayerTwo.className = '';\r\n      this.#scoreComputer.className = 'display-none';\r\n\r\n      const html =\r\n        '<i class=\"far fa-user user-1\"></i> <i class=\"far fa-user user-2\"></i>';\r\n      this.#playerCount.innerHTML = '';\r\n      this.#playerCount.insertAdjacentHTML('beforeend', html);\r\n    }\r\n\r\n    this._resetToDefault();\r\n  }\r\n\r\n  async _displayFiguresAccordingly(e) {\r\n    await this._playAudioWhenPlacingFigures();\r\n\r\n    // check for the reset\r\n    if (this.#identifyIfResetNeeded) {\r\n      this.#identifyIfResetNeeded = false;\r\n      this._resetToDefault();\r\n      return;\r\n    }\r\n\r\n    // don't add to figures to the same square\r\n    if (\r\n      this.#xArray.includes(+e.target.closest('.square').dataset.id) ||\r\n      this.#oArray.includes(+e.target.closest('.square').dataset.id)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.#activePlayer === 0) {\r\n      e.target.querySelectorAll('.x').forEach(x => x.classList.add('shown'));\r\n      // push to the X arrays\r\n      const number = +e.target.dataset.id;\r\n      this.#xArray.push(number);\r\n\r\n      // remove from the notUsed Figures array\r\n      const idx = this.#squaresNotUsed.indexOf(number);\r\n      this.#squaresNotUsed.splice(idx, 1);\r\n\r\n      this.#activePlayer = 1;\r\n    } else {\r\n      e.target.querySelector('.o').classList.add('shown');\r\n      // push to the O arrays\r\n      const number = +e.target.dataset.id;\r\n      this.#oArray.push(number);\r\n\r\n      // remove from the notUsed Figures array\r\n      const idx = this.#squaresNotUsed.indexOf(number);\r\n      this.#squaresNotUsed.splice(idx, 1);\r\n\r\n      // change the player\r\n      this.#activePlayer = 0;\r\n    }\r\n\r\n    this._checkForTheWinner();\r\n\r\n    // check for the multiplayer\r\n    if (!this.#multiPlayer) {\r\n      const randomSquare =\r\n        this.#squaresNotUsed[\r\n          Math.floor(Math.random() * this.#squaresNotUsed.length)\r\n        ];\r\n\r\n      if (this.#theWinningSequence.length !== 3)\r\n        setTimeout(() => this._fillRandomSquare(randomSquare), 500);\r\n    }\r\n\r\n    // check if none won\r\n    if (this.#squaresNotUsed.length === 0) {\r\n      // console.log('All the squreas are taken');\r\n      setTimeout(this._resetToDefault.bind(this), 500);\r\n    }\r\n  }\r\n\r\n  async _fillRandomSquare(randomSquare) {\r\n    await this._playAudioWhenPlacingFigures();\r\n\r\n    this.#allSquares.forEach(square => {\r\n      if (+square.dataset.id === randomSquare) {\r\n        square.querySelector('.o').classList.add('shown');\r\n        // push to the O arrays\r\n        this.#oArray.push(randomSquare);\r\n\r\n        // remove from the notUsed Figures array\r\n        const idx = this.#squaresNotUsed.indexOf(randomSquare);\r\n        this.#squaresNotUsed.splice(idx, 1);\r\n\r\n        // change the player\r\n        this.#activePlayer = 0;\r\n      }\r\n    });\r\n\r\n    // true says that it's computer the winner\r\n    this._checkForTheWinner(true);\r\n  }\r\n\r\n  async _playAudioWhenPlacingFigures() {\r\n    // stop all the audio playing\r\n    [this.#audioWhenPlacingFigure, this.#audioWhenWinning].forEach(sound => {\r\n      sound.pause();\r\n      sound.currentTime = 0;\r\n    });\r\n\r\n    // play the audio tag\r\n    try {\r\n      await this.#audioWhenPlacingFigure.play();\r\n    } catch {\r\n      console.log('Running Audio interrupted the other audio sound');\r\n    }\r\n  }\r\n\r\n  _checkForTheWinner(computer = false) {\r\n    // check if the first player won\r\n    this.#winningSequences.forEach(sequence => {\r\n      if (this._isArrayInArray(this.#xArray, sequence)) {\r\n        this._winOperations(sequence, 'first');\r\n      }\r\n    });\r\n\r\n    //   check if the second player won\r\n    this.#winningSequences.forEach(sequence => {\r\n      if (this._isArrayInArray(this.#oArray, sequence)) {\r\n        this._winOperations(sequence, 'second', computer);\r\n      }\r\n    });\r\n  }\r\n\r\n  async _winOperations(sequence, player, computer = false) {\r\n    // display the winner in h2\r\n    this.#winnerHeading.textContent = `Winner is the ${player} player! ${\r\n      player === 'first' ? '🥇' : '🥈'\r\n    }`;\r\n\r\n    //   add score to player one\r\n    const winnerPlayerBoard =\r\n      player === 'first' ? this.#scorePlayerOne : this.#scorePlayerTwo;\r\n\r\n    if (computer) {\r\n      this.#scoreComputer.textContent = +this.#scoreComputer.textContent + 1;\r\n    } else {\r\n      winnerPlayerBoard.textContent = +winnerPlayerBoard.textContent + 1;\r\n    }\r\n\r\n    //   remember the winning sequence\r\n    this.#theWinningSequence = sequence;\r\n\r\n    //   make it so that winnings sequence opacity is higher\r\n    this._makeWinningSequenceLighther();\r\n\r\n    //resetting to initial state\r\n    this.#identifyIfResetNeeded = true;\r\n\r\n    // play the audio tag\r\n    [this.#audioWhenPlacingFigure, this.#audioWhenWinning].forEach(sound => {\r\n      sound.pause();\r\n      sound.currentTime = 0;\r\n    });\r\n    try {\r\n      await this.#audioWhenWinning.play();\r\n    } catch {\r\n      console.log('Running Audio interrupted the other audio sound');\r\n    }\r\n  }\r\n\r\n  _makeWinningSequenceLighther() {\r\n    if (this.#theWinningSequence) {\r\n      this.#figures.forEach(figure => {\r\n        figure.style.opacity = 0.5;\r\n\r\n        if (\r\n          +figure.closest('.square').dataset.id ===\r\n            this.#theWinningSequence[0] ||\r\n          +figure.closest('.square').dataset.id ===\r\n            this.#theWinningSequence[1] ||\r\n          +figure.closest('.square').dataset.id === this.#theWinningSequence[2]\r\n        ) {\r\n          figure.style.opacity = 1;\r\n          figure.classList.add('animation');\r\n          setTimeout(() => figure.classList.remove('animation'), 1001);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _resetToDefault() {\r\n    const shownClases = document.querySelectorAll('.shown');\r\n    shownClases.forEach(el => el.classList.remove('shown'));\r\n\r\n    this.#theWinningSequence = [];\r\n    this.#activePlayer = 0;\r\n    this.#xArray = [];\r\n    this.#oArray = [];\r\n\r\n    this.#figures.forEach(figure => (figure.style.opacity = 1));\r\n\r\n    this.#winnerHeading.textContent = '';\r\n\r\n    this.#squaresNotUsed = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  }\r\n\r\n  _isArrayInArray(arr1, arr2) {\r\n    return arr2.every(elem => arr1.includes(elem));\r\n  }\r\n\r\n  _controlAudioTag() {\r\n    const iconEl = this.#controlAudioTag.querySelector('.fas');\r\n\r\n    if (+this.#controlAudioTag.dataset.volume === 1) {\r\n      [this.#audioWhenPlacingFigure, this.#audioWhenWinning].forEach(sound => {\r\n        sound.volume = 0;\r\n      });\r\n\r\n      this.#controlAudioTag.dataset.volume = 0;\r\n      iconEl.classList.value = 'fas fa-volume-mute';\r\n    } else {\r\n      [this.#audioWhenPlacingFigure, this.#audioWhenWinning].forEach(sound => {\r\n        sound.volume = 1;\r\n      });\r\n\r\n      this.#controlAudioTag.dataset.volume = 1;\r\n      iconEl.className = 'fas fa-volume-up';\r\n    }\r\n  }\r\n}\r\n\r\nconst ticTacToe = new TicTacToe();\r\n"]}